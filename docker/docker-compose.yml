---

# Ref: https://github.com/confluentinc/cp-docker-images/blob/master/examples/cp-all-in-one/docker-compose.yml

version: '2.2'
services:
  zookeeper:
    container_name: zookeeper
    hostname: zookeeper
    image: confluentinc/cp-zookeeper:5.1.0
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    volumes:
      - zookeeper_data:/var/lib/zookeeper
    networks:
      - kafka

  kafka1:
    container_name: kafka1
    hostname: kfaka1
    image: confluentinc/cp-kafka:5.1.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9092
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
    volumes:
      - kafka1_data:/var/lib/kafka
    networks:
      - kafka

  kafka2:
    container_name: kafka2
    hostname: kfaka2
    image: confluentinc/cp-kafka:5.1.0
    ports:
      - "9093:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:9092
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
    volumes:
      - kafka2_data:/var/lib/kafka
    networks:
      - kafka

  kafdrop:
    container_name: kafdrop
    hostname: kafdrop
    image: kavimaluskam/kafdrop
    ports:
      - "9000:9000"
    environment:
      ZK_HOSTS: "zookeeper:2181"
      LISTEN: "9000"
      SCHEMA_REGISTRY_URL: "http://schema_registry:8081"
    networks:
      - kafka

  schema_registry:
    container_name: schema_registry
    hostname: schema_registry
    image: confluentinc/cp-schema-registry:5.1.0
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema_registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: "zookeeper:2181"
      SCHEMA_REGISTRY_ACCESS_CONTROL_ALLOW_METHODS: "GET,POST,PUT,OPTIONS"
      SCHEMA_REGISTRY_ACCESS_CONTROL_ALLOW_ORIGIN: "*"
    networks:
      - kafka

  schema_registry_ui:
    container_name: schema_registry_ui
    hostname: schema_registry_ui
    image: landoop/schema-registry-ui
    ports:
      - "8082:8000"
    environment:
      SCHEMAREGISTRY_URL: "http://localhost:8081"
    networks:
      - kafka

  postgres:
    container_name: postgres
    hostname: postgres
    image: postgres:9.6.11
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    volumes:
      - ./init_db:/docker-entrypoint-initdb.d
    networks:
      - kafka

networks:
  kafka:
    driver: bridge

volumes:
  zookeeper_data:
  kafka1_data:
  kafka2_data:
